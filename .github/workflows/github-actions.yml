name: CI/CD Pipeline for Zero2K8s
on:
  push:
    branches: [ devops-actions, devops-staging, main ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    # Cache Minikube Base Image and Preload
    - name: Cache Minikube Base Image and Preload
      uses: actions/cache@v4
      with:
        path: ~/.minikube/cache
        key: ${{ runner.os }}-minikube-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-minikube-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: metanets/zero2k8s-cop:latest

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube

    - name: Start Minikube
      run: |
        minikube start --driver=docker --kubernetes-version=v1.32.0 --wait=all

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Deploy to Minikube
      run: |
        kubectl apply -f k8s/cop-deployment.yaml
        kubectl rollout status deployment/zero2k8s-cop

        SERVICE_URL=$(minikube service zero2k8s-cop-service --url)
        sleep 10
        curl -f $SERVICE_URL/metrics
        curl -X POST -H "Content-Type: application/json" -d '{"test": "handshake"}' $SERVICE_URL/mcp/handshake

    - name: Debug on failure
      if: failure()
      run: |
        echo "==== DESCRIBE DEPLOYMENT ===="
        kubectl describe deployment zero2k8s-cop || true
        echo "==== LOGS ===="
        kubectl logs -l app=zero2k8s-cop --tail=100 || true

    - name: Cleanup
      if: always()
      run: |
        echo "Stopping Minikube cluster..."
        minikube stop || true
        minikube delete || true
